import pandas as pd
import tkinter as tk
from tkinter import filedialog
import os

# Função para selecionar arquivos
def selecionar_arquivo(titulo):
    root = tk.Tk()
    root.withdraw()
    caminho = filedialog.askopenfilename(title=titulo, filetypes=[('Arquivos Excel', '*.xlsx')])
    return caminho

# Selecionar planilha de cadastro e agendamento
cadastro_path = selecionar_arquivo('Selecione a planilha de CADASTRO dos motoboys')
agendamento_path = selecionar_arquivo('Selecione a planilha de AGENDAMENTO dos motoboys')

# Ler as planilhas
cadastro_df = pd.read_excel(cadastro_path)
agendamento_df = pd.read_excel(agendamento_path)

# Padronizar os nomes (tirar espaços, deixar minúsculo)
cadastro_df['Nome'] = cadastro_df['Nome'].str.strip().str.lower()
agendamento_df['Entregador'] = agendamento_df['Entregador'].str.strip().str.lower()

# Corrigir Telefone para texto (caso venha como número)
cadastro_df['Telefone'] = cadastro_df['Telefone'].astype(str)

# Pegar todas as datas agendadas
datas = pd.to_datetime(agendamento_df['Data de agendamento']).dt.date.unique()

# Criar um dicionário para armazenar os motoboys não agendados por data
nao_agendados_por_data = {}

# Para cada data, identificar motoboys não agendados
for data in datas:
    agendados_no_dia = agendamento_df[pd.to_datetime(agendamento_df['Data de agendamento']).dt.date == data]['Entregador']
    motoboys_nao_agendados = cadastro_df[~cadastro_df['Nome'].isin(agendados_no_dia)]
    if not motoboys_nao_agendados.empty:
        # Selecionar apenas as colunas desejadas
        resultado = motoboys_nao_agendados[['Nome', 'Telefone', 'Cidade', 'Bairro', 'CEP']].copy()
        nao_agendados_por_data[str(data)] = resultado

# Definir local para salvar a nova planilha
output_path = os.path.join(os.path.dirname(cadastro_path), 'Motoboys_Nao_Escalados.xlsx')

# Escrever o arquivo Excel com abas separadas
with pd.ExcelWriter(output_path) as writer:
    for data, df_ in nao_agendados_por_data.items():
        # Nome da aba com data
        aba_nome = data.replace('-', '_')
        df_.to_excel(writer, sheet_name=aba_nome, index=False)

print(f'Arquivo gerado com sucesso em: {output_path}')
